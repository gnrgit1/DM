import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from datetime import datetime

# Load the COVID India dataset from Kaggle (replace with your own dataset path)
df = pd.read_csv('covid_india.csv')

# Ensure the date column is in datetime format
df['Date'] = pd.to_datetime(df['Date'])

# Set the Date column as the index
df.set_index('Date', inplace=True)

# We will use the 'TotalConfirmed' column for forecasting
df = df[['TotalConfirmed']]

# Visualizing the original time series data
plt.figure(figsize=(10, 6))
plt.plot(df)
plt.title('COVID-19 Total Confirmed Cases in India')
plt.xlabel('Date')
plt.ylabel('Total Confirmed Cases')
plt.grid(True)
plt.show()

# ARIMA Model (p, d, q) - We can use ACF/PACF plots to determine the optimal values for p, d, and q.
# For simplicity, we start with ARIMA(5, 1, 0) as an example.

model = ARIMA(df, order=(5, 1, 0))  # ARIMA model (p=5, d=1, q=0)
model_fit = model.fit()

# Make predictions for the next 30 days
forecast_steps = 30
forecast = model_fit.forecast(steps=forecast_steps)

# Visualizing the forecasted values
plt.figure(figsize=(10, 6))
plt.plot(df.index, df['TotalConfirmed'], label='Historical Data')
forecast_index = pd.date_range(df.index[-1] + pd.Timedelta(days=1), periods=forecast_steps, freq='D')
plt.plot(forecast_index, forecast, label='Forecasted Cases', color='red')
plt.title('COVID-19 Confirmed Cases Forecast for India (Next 30 Days)')
plt.xlabel('Date')
plt.ylabel('Total Confirmed Cases')
plt.legend()
plt.grid(True)
plt.show()

# Optionally, print the forecasted values
print("Forecasted COVID Cases for the next 30 days:")
print(forecast)
